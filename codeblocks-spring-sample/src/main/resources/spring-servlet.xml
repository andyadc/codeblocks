<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
	 http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <description>Spring MVC Configuration</description>

    <!-- 静态资源映射 -->
    <mvc:resources mapping="/static/**" location="/static/"/>

    <!-- 加载配置文件供mvc容器使用 -->
    <context:property-placeholder ignore-unresolvable="true" location="classpath*:/application.properties"/>

    <!-- 容器默认的DefaultServletHandler处理 所有静态内容与无RequestMapping处理的URL -->
    <mvc:default-servlet-handler/>

    <!--
    定义无需Controller的url<->view直接映射 <mvc:view-controller path="/" view-name="/index" />
    -->

    <!-- 自动扫描且只扫描@Controller -->
    <context:component-scan base-package="com.andyadc.codeblocks" use-default-filters="false">
        <context:include-filter type="annotation"
                                expression="org.springframework.web.servlet.config.annotation.EnableWebMvc"/>
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.RestController"/>
    </context:component-scan>

    <mvc:annotation-driven
            content-negotiation-manager="contentNegotiationManager">
        <mvc:message-converters register-defaults="false">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"/>
                <property name="writeAcceptCharset" value="false"/>
            </bean>

            <!-- 等价于下面 xml 配置 -->
            <!--<bean class="com.andyadc.codeblocks.framework.jackson.CustomerMappingJackson2HttpMessageConverter">-->

            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="prettyPrint" value="false"/>
                <property name="objectMapper">
                    <bean class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean">
                        <!-- null 值不参与序列化 -->
                        <property name="serializationInclusion" value="NON_NULL"/>
                        <property name="featuresToDisable">
                            <array>
                                <util:constant
                                        static-field="com.fasterxml.jackson.databind.DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES"/>
                            </array>
                        </property>
                        <property name="simpleDateFormat" value="yyyy-MM-dd HH:mm:ss.SSS"/>
                    </bean>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 内容协商管理器 -->
    <!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
    <!--1、首先检查路径扩展名（如my.pdf）；2、其次检查Parameter（如my?format=pdf）；3、检查Accept Header -->
    <bean id="contentNegotiationManager"
          class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <!-- 扩展名至mimeType的映射,即 /user.json => application/json -->
        <property name="favorPathExtension" value="true"/>
        <!-- 用于开启 /userinfo/123?format=json 的支持 -->
        <property name="favorParameter" value="true"/>
        <property name="parameterName" value="format"/>
        <!-- 是否忽略Accept Header -->
        <property name="ignoreAcceptHeader" value="false"/>

        <!--扩展名到MIME的映射；favorPathExtension, favorParameter是true时起作用 -->
        <property name="mediaTypes">
            <value>
                json=application/json
                xml=application/xml
            </value>
        </property>
    </bean>

    <!-- 定义JSP文件的位置 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- controller performance aop -->
    <bean id="performanceMonitorAspect" class="com.andyadc.codeblocks.framework.aspect.PerformanceMonitor"/>
    <aop:config>
        <aop:aspect ref="performanceMonitorAspect">
            <!--<aop:pointcut expression="execution(* com.andyadc.codeblocks.web.controller..*.*(..))" id="performancePointCut"/>-->
            <aop:pointcut id="performanceAnnotationPointCut"
                          expression="@annotation(com.andyadc.codeblocks.framework.aspect.Performance)"/>
            <aop:around method="doAround" pointcut-ref="performanceAnnotationPointCut"/>
        </aop:aspect>
    </aop:config>

    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/static/**"/>
            <bean class="com.andyadc.codeblocks.framework.spring.RequestInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- Exception Resolver -->
    <bean id="handlerExceptionResolver"
          class="com.andyadc.codeblocks.showcase.web.resolver.ControllerExceptionResolver"/>

</beans>
