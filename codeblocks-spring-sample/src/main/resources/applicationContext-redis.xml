<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns="http://www.springframework.org/schema/beans"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"
	   default-lazy-init="false">

	<description>Redis Configuration</description>

	<!-- redisTemplate -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisStandaloneConnectionFactory"/>
		<property name="keySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
		</property>
		<property name="valueSerializer">
			<bean class="com.andyadc.codeblocks.framework.redis.MsgpackRedisSerializer"/>
			<!--<bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer"/>-->
		</property>
	</bean>

	<!-- jedisPoolConfig -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.pool.maxIdle}"/>
		<property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}"/>
		<property name="maxTotal" value="${redis.pool.maxTotal}"/>
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>
		<property name="testOnReturn" value="${redis.pool.testOnReturn}"/>
	</bean>

	<!-- Jedis Standalone ConnectionFactory -->
	<bean id="jedisStandaloneConnectionFactory"
		  class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<constructor-arg name="standaloneConfig" ref="redisStandaloneConfiguration"/>
	</bean>

	<!-- Jedis Sentinel ConnectionFactory -->
	<bean id="jedisSentinelConnectionFactory"
		  class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<constructor-arg name="sentinelConfig" ref="redisSentinelConfiguration"/>
		<constructor-arg name="poolConfig" ref="jedisPoolConfig"/>
	</bean>

	<!-- redis standalone config -->
	<bean id="redisStandaloneConfiguration"
		  class="org.springframework.data.redis.connection.RedisStandaloneConfiguration">
		<property name="hostName" value="${redis.host}"/>
		<property name="port" value="${redis.port}"/>
		<property name="database" value="${redis.database}"/>
		<property name="password" value="${redis.password}"/>
	</bean>

	<!-- redis sentinel config -->
	<bean id="redisSentinelConfiguration" class="org.springframework.data.redis.connection.RedisSentinelConfiguration">
		<property name="master">
			<bean class="org.springframework.data.redis.connection.RedisNode">
				<property name="name" value="mymaster"/>
			</bean>
		</property>
		<property name="sentinels">
			<set>
				<bean class="org.springframework.data.redis.connection.RedisNode">
					<constructor-arg name="host" value="ip"/>
					<constructor-arg name="port" value="6379"/>
				</bean>
			</set>
		</property>
	</bean>
</beans>
